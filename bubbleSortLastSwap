#include <stdio.h>

int bubbleSortLastSwap(int vetor[], int n) {
    int i, j, aux;
    int limite, ultimaTroca;
    int comparacoes = 0;

    limite = n - 1; // inicialmente percorre até o final
    do {
        ultimaTroca = 0;
        for (j = 0; j < limite; j++) {
            comparacoes++;
            if (vetor[j] > vetor[j + 1]) {
                aux = vetor[j];
                vetor[j] = vetor[j + 1];
                vetor[j + 1] = aux;
                ultimaTroca = j; // guarda posição da última troca
            }
        }
        limite = ultimaTroca; // próximo loop só vai até a última troca
    } while (limite > 0);
    
    return comparacoes;
}

int main() {
    int vetorMelhorCaso[] = {1, 2, 3, 4, 5};
    int vetorPiorCaso[]   = {5, 4, 3, 2, 1};
    int vetorMedioCaso[]  = {1, 2, 5, 3, 4};

    int n = 5;
    int comparacoes;

    int v1[5];
    for (int i = 0; i < n; i++) v1[i] = vetorMelhorCaso[i];
    comparacoes = bubbleSortLastSwap(v1, n);
    printf("Melhor Caso - numero de comparacoes: %d\n", comparacoes);

    int v2[5];
    for (int i = 0; i < n; i++) v2[i] = vetorPiorCaso[i];
    comparacoes = bubbleSortLastSwap(v2, n);
    printf("Pior Caso - numero de comparacoes: %d\n", comparacoes);

    int v3[5];
    for (int i = 0; i < n; i++) v3[i] = vetorMedioCaso[i];
    comparacoes = bubbleSortLastSwap(v3, n);
    printf("Medio Caso - numero de comparacoes: %d\n", comparacoes);

    return 0;
}
