#include <stdio.h>
#include <stdbool.h>

int bubbleSortEarlyExit(int vetor[], int n) {
    int i, j, aux;
    int comparacoes = 0;
    bool trocou;

    for (i = 0; i < n - 1; i++) {
        trocou = false;
        for (j = 0; j < n - 1 - i; j++) {
            comparacoes++;
            if (vetor[j] > vetor[j + 1]) {
                aux = vetor[j];
                vetor[j] = vetor[j + 1];
                vetor[j + 1] = aux;
                trocou = true;
            }
        }
        if (!trocou) break; // já está ordenado
    }
    return comparacoes;
}

int main() {
    int vetorMelhorCaso[] = {1, 2, 3, 4, 5};
    int vetorPiorCaso[]   = {5, 4, 3, 2, 1};
    int vetorMedioCaso[]  = {1, 2, 5, 3, 4};

    int n = 5;
    int comparacoes;

    int v1[5];
    for (int i = 0; i < n; i++) v1[i] = vetorMelhorCaso[i];
    comparacoes = bubbleSortEarlyExit(v1, n);
    printf("Melhor Caso - numero de comparacoes: %d\n", comparacoes);

    int v2[5];
    for (int i = 0; i < n; i++) v2[i] = vetorPiorCaso[i];
    comparacoes = bubbleSortEarlyExit(v2, n);
    printf("Pior Caso - numero de comparacoes: %d\n", comparacoes);

    int v3[5];
    for (int i = 0; i < n; i++) v3[i] = vetorMedioCaso[i];
    comparacoes = bubbleSortEarlyExit(v3, n);
    printf("Medio Caso - numero de comparacoes: %d\n", comparacoes);

    return 0;
}
